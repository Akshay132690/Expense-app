{"version":3,"file":"static/css/main.6d309f41.css","mappings":"AACA,EAGE,qBAAsB,CADtB,QAAS,CADT,SAIF,CAEA,SAGA,kDAAmD,CACnD,WACA,CACA,oCALE,WAYF,CAeA,2BAQI,kBAAmB,CAPrB,kDAAwE,CAetE,qBAAsB,CAZtB,YAAa,CAEb,qBAAsB,CAMtB,sBAAuB,CAFvB,gBAAiB,CAIjB,YAGJ,CACA,aACE,UACF,CACA,eACE,UACF,CACA,aAEE,qBAAuB,CAEvB,eAAgB,CADhB,WAEF,CACA,yBAOI,qBAAsB,CAFtB,qBAAsB,CACtB,iBAAkB,CAElB,8BAAqC,CAErC,WAAY,CARZ,eAAgB,CAEhB,YAAa,CADb,UAQJ,CAGA,OAII,kBAAmB,CAFnB,eAAgB,CAGhB,iBAAkB,CAFlB,UAGJ,CACA,SAEE,kBAAmB,CAGnB,uBAAwB,CAJxB,YAAa,CAEb,6BAA8B,CAG7B,kBAAmB,CAFpB,YAKF,CAEA,MAGE,UACF,CAIA,oBAcE,aAAS,CAbT,YAAa,CAab,QAAS,CAXT,mCAAqC,CAQrC,iDAAoD,CAIpD,UACF,CACA,QACE,YAAa,CAEb,kBAEF,CACA,aACE,YAAa,CACb,qBACF,CACA,WACC,sBACD,CAKA,yBACE,oBACE,mCAEF,CACF,CAEA,yBACE,oBAEE,QAAS,CADT,mCAEF,CACF,CAEA,yBACE,oBAEE,QAAS,CADT,yBAEF,CACF","sources":["index.css"],"sourcesContent":["\n*{\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  \n}\n\n.content{\n  height: 90vh;\n  /* background:linear-gradient(30deg,rgb(247, 247, 134), rgb(53, 235, 144)) */\nbackground: linear-gradient(130deg,#89DA59,#80BD9E); \npadding: 5px;\n}\n.register-page,.login-page{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 90vh;\n\n  \n}\n/* .loginform{\n  background-color: palegreen;\n  padding: 10vh;\n  border-left: 5px solid rgb(139, 133, 133);\n    border-bottom: 5px solid rgb(139, 133, 133);\n\n  \n}\n.registerform{\n  background-color:lavender;\n  padding: 8vh;\n} */\n/* In your CSS file (e.g., src/App.css or src/Login.css) */\n\n.login-page ,.register-page{\n  background:linear-gradient(120deg,rgb(154, 154, 248),rgb(156, 240, 101));\n  /* background: linear-gradient(120deg,#89DA59,#80BD9E); */\n    /* Make the container a flexbox */\n    display: flex;\n    /* Stack children (alerts, form, spinner) vertically */\n    flex-direction: column;\n    /* Center children horizontally within the login-page container */\n    align-items: center;\n    /* Optional: If you want the login page to fill the screen height */\n    min-height: 100vh;\n    /* Optional: Vertically center content if min-height is set */\n    justify-content: center;\n    /* Add some padding around the overall content */\n    padding: 20px;\n    /* Ensure padding is included in width/height calculations */\n    box-sizing: border-box;\n}\n.active-icon{\n  color:black\n}\n.inactive-icon{\n  color: gray;\n}\n.switch-icon{\n  /* box-shadow: 0 0 5px black; */\n  border: 1px solid black;\n  padding: 3px;\n  margin-top: 15px;\n}\n.loginform,.registerform {\n    /* Define a maximum width for the form for better aesthetics */\n    max-width: 400px; /* Adjust as needed */\n    width: 100%;     /* Allow it to shrink on smaller screens */\n    padding: 30px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    background-color: #fff;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    margin-top: 20px; /* Add some space between the alerts and the form */\n    margin: 10px;\n}\n\n/* Apply specific styles to the Bootstrap alerts when they are active */\n.alert {\n    /* Ensure alerts also respect a max-width, matching the form for alignment */\n    max-width: 400px; /* Should match or be slightly less than .loginform's max-width */\n    width: 100%;     /* Make it take full available width up to max-width */\n    margin-bottom: 15px; /* Space between alerts if both appear, and between alert and form */\n    text-align: center; /* Center the text inside the alert */\n}\n.filters{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  box-shadow: 0 0 5px gray;\n   margin-bottom: 10px;\n  \n  \n}\n/* General card styling (keep your existing styles for .card, card-header, etc.) */\n.card {\n  /* ... existing card styles ... */\n /* Adjust margin if needed */\n  margin: 5px;\n}\n\n/* ---------------------------------------------------- */\n/* CSS Grid for Category Cards - FOR 4 COLUMNS */\n.category-card-grid {\n  display: grid;\n \n  grid-template-columns: repeat(4, 1fr);\n\n  /* Option 2: Responsive 4 columns (preferred) */\n  /* This will try to fit 4 columns, but each column will be at least 150px wide.\n     If there's not enough space for 4 columns, it will automatically reduce\n     to 3, 2, or 1 column as needed based on available width. */\n  /* grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); */\n  /* If you want to force exactly 4 columns even if they get smaller: */\n  grid-template-columns: repeat(4, minmax(100px, 1fr)); /* Example min-width */\n\n\n  gap: 15px; /* Space between the category cards */\n  width: 100%; /* Ensure it fills its parent container */\n}\n.d-flex{\n  display: flex;\n  /* flex-direction: column; */\n  flex-direction: row;\n\n}\n.d-flex .col{\n  display: flex;\n  flex-direction: column;\n}\n.card-body{\n justify-content: center;\n}\n/* ---------------------------------------------------- */\n/* Responsive adjustments for category-card-grid */\n\n/* For smaller screens (e.g., tablets - adjust breakpoint as needed) */\n@media (max-width: 992px) { /* Example: If you want 3 columns on smaller desktops/laptops */\n  .category-card-grid {\n    grid-template-columns: repeat(3, 1fr);\n    /* Or auto-fit, minmax(140px, 1fr) */\n  }\n}\n\n@media (max-width: 768px) { /* For medium devices (larger tablets) */\n  .category-card-grid {\n    grid-template-columns: repeat(2, 1fr); /* 2 columns */\n    gap: 10px;\n  }\n}\n\n@media (max-width: 576px) { /* For extra small devices (phones) */\n  .category-card-grid {\n    grid-template-columns: 1fr; /* 1 full-width column */\n    gap: 10px;\n  }\n}"],"names":[],"sourceRoot":""}